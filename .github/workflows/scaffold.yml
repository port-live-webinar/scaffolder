on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string
    secrets: 
      ORG_TOKEN: 
        required: true
      CLIENT_ID:
        required: true
      CLIENT_SECRET:
        required: true
jobs: 
  scaffold:
    runs-on: ubuntu-latest
    steps:
      - run: |
          access_token=$(curl --location --request POST 'https://api.getport.io/v1/auth/access_token' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "clientId": "${{ secrets.CLIENT_ID }}",
              "clientSecret": "${{ secrets.CLIENT_SECRET }}"
          }' | jq '.accessToken' | sed 's/"//g')        
          curl --location "https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_payload).context.runId }}/logs" \
          --header "Authorization: Bearer $access_token" \
          --header "Content-Type: application/json" \
          --data "{
            \"message\": \"ðŸš€ Scaffolding a new repository: ${{ fromJson(inputs.port_payload).payload.properties.name }}  \"
          }"
          sleep 5
          curl --location "https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_payload).context.runId }}/logs" \
          --header "Authorization: Bearer $access_token" \
          --header "Content-Type: application/json" \
          --data "{
            \"message\": \"ðŸ”‘ Setting permissions for repository: ${{ fromJson(inputs.port_payload).payload.properties.name }}  \"
          }"
      - uses: actions/checkout@v3
      - uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          operation: UPSERT
          identifier: ${{ fromJson(inputs.port_payload).payload.properties.name }}
          title: ${{ fromJson(inputs.port_payload).payload.properties.name }}
          blueprint: microservice
          runId:  ${{ fromJson(inputs.port_payload).context.runId }}
          properties: |
            {
              "description": "${{ fromJson(inputs.port_payload).payload.properties.description }}"
            }
          team: '["${{ fromJson(inputs.port_payload).payload.properties.team }}"]'
      - uses: howlowck/create-repo-action@v1.0
        with:
          zipPath: './src.zip'
          repoOrg: 'port-live-webinar'
          repoName: ${{ fromJson(inputs.port_payload).payload.properties.name }}
          repoDescription: ${{ fromJson(inputs.port_payload).payload.properties.description }}
          repoVisibility: 'private'
          securityToken: ${{ secrets.ORG_TOKEN }}
      - run: |
          access_token=$(curl --location --request POST 'https://api.getport.io/v1/auth/access_token' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "clientId": "${{ secrets.CLIENT_ID }}",
              "clientSecret": "${{ secrets.CLIENT_SECRET }}"
          }' | jq '.accessToken' | sed 's/"//g')        
          curl --location "https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_payload).context.runId }}/logs" \
          --header "Authorization: Bearer $access_token" \
          --header "Content-Type: application/json" \
          --data "{
            \"message\": \"âœ… Done scaffolding repository: ${{ fromJson(inputs.port_payload).payload.properties.name }}  \"
          }"          
